syntax = "proto3";

//protoc -I=. -I=$GOPATH/src -I=$GOPATH/src/github.com/gogo/protobuf/protobuf --gogoslick_out=. msg/msg.proto

package msg;
option go_package = "./msg";

enum ConnType{
  SendingMsg = 0;
  SendingRequest = 1;
}

//Types of messages nodes can send to one another
enum Type{
  Prepare = 0;
  Promise = 1;
  Propose = 2;
  Accept = 3;
  LearnerMsg = 4; //messages sent from Acceptor to Learner
  Commit = 5; //identifies messages that have been committed
}

//Data type used for inter-node communication
message Msg{ //size of 48bytes
  int64 id = 1;
  int64 priority = 2; //stores priority msg had as QueueRequest
  Type type = 3;
  int32 slotIndex = 4;
  int32 proposerId = 5; //id of proposer that sent message
  int32 fromClient = 6; //id of client that sent request
  string value = 7;
  int64 previousId = 8; //id of previously accepted value
  repeated int64 size = 9; //size of message
}

//Data type for values stored in queue
message QueueRequest {
  int64 priority = 1;
  string value = 2;
  int32 fromClient = 3; //id of client that sent request
}

//Type used for sending information about a slot's value
message SlotValue {
  Type type = 1;
  int32 slotIndex = 2;
  string value = 3;
}